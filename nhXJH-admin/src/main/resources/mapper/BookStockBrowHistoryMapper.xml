<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.nhXJH.web.mapper.BookStockBrowHistoryMapper">
    
    <resultMap type="com.nhXJH.web.domain.BookStockBrowHistory" id="BookStockBrowHistoryResult">
        <result property="id"    column="id"    />
        <result property="userId"    column="user_id"    />
        <result property="bookId"    column="book_id"    />
        <result property="stockId"    column="stock_id"    />
        <result property="backTime"    column="back_time"    />
        <result property="hasBack"    column="has_back"    />
        <result property="status"    column="status"    />
        <result property="isDel"    column="is_del"    />
        <result property="createPersonal"    column="create_personal"    />
        <result property="createTime"    column="create_time"    />
        <result property="updatePersonal"    column="update_personal"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>




    <sql id="selectBookStockBrowHistoryVo">
        select
            id,
            user_id,
            book_id,
            stock_id,
            back_time,
            has_back,
            `status`,
            is_del,
            create_personal,
            create_time,
            update_personal,
            update_time
        from book_stock_brow_history
    </sql>

    <select id="selectBookStockBrowHistoryList" parameterType="com.nhXJH.web.domain.BookStockBrowHistory" resultMap="BookStockBrowHistoryResult">
        <include refid="selectBookStockBrowHistoryVo"/>
        <where>  
            <if test="userId != null "> and user_id = #{userId}</if>
            <if test="bookId != null "> and book_id = #{bookId}</if>
            <if test="stockId != null "> and stock_id = #{stockId}</if>
            <if test="backTime != null "> and back_time = #{backTime}</if>
            <if test="hasBack != null  and hasBack != ''"> and has_back = #{hasBack}</if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="createPersonal != null "> and create_personal = #{createPersonal}</if>
            <if test="updatePersonal != null "> and update_personal = #{updatePersonal}</if>
             and is_del = '0'
        </where>
    </select>
    
    <select id="selectBookStockBrowHistoryById" parameterType="Long" resultMap="BookStockBrowHistoryResult">
        <include refid="selectBookStockBrowHistoryVo"/>
        where id = #{id} and is_del='0'
    </select>

    <select id="selectUserBrowedBook" parameterType="Long" resultMap="BookStockBrowHistoryResult">
        <include refid="selectBookStockBrowHistoryVo"/>
        where user_id = #{userId}
        and book_id = #{bookId}
        and status='1'
        and is_del='0'
        and has_back != '1' ORDER BY create_time DESC LIMIT 1
    </select>
        
    <insert id="insertBookStockBrowHistory" parameterType="com.nhXJH.web.domain.BookStockBrowHistory" useGeneratedKeys="true" keyProperty="id">
        insert into book_stock_brow_history
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="userId != null">user_id,</if>
            <if test="bookId != null">book_id,</if>
            <if test="stockId != null">stock_id,</if>
            <if test="backTime != null">back_time,</if>
            <if test="hasBack != null">has_back,</if>
            <if test="status != null">status,</if>
            <if test="createPersonal != null">create_personal,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updatePersonal != null">update_personal,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="userId != null">#{userId},</if>
            <if test="bookId != null">#{bookId},</if>
            <if test="stockId != null">#{stockId},</if>
            <if test="backTime != null">#{backTime},</if>
            <if test="hasBack != null">#{hasBack},</if>
            <if test="status != null">#{status},</if>
            <if test="createPersonal != null">#{createPersonal},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updatePersonal != null">#{updatePersonal},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateBookStockBrowHistory" parameterType="com.nhXJH.web.domain.BookStockBrowHistory">
        update book_stock_brow_history
        <trim prefix="SET" suffixOverrides=",">
            <if test="userId != null">user_id = #{userId},</if>
            <if test="bookId != null">book_id = #{bookId},</if>
            <if test="stockId != null">stock_id = #{stockId},</if>
            <if test="backTime != null">back_time = #{backTime},</if>
            <if test="hasBack != null">has_back = #{hasBack},</if>
            <if test="status != null">status = #{status},</if>
            <if test="isDel != null">is_del = #{isDel},</if>
            <if test="createPersonal != null">create_personal = #{createPersonal},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updatePersonal != null">update_personal = #{updatePersonal},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteBookStockBrowHistoryById" parameterType="Long">
        update book_stock_brow_history set is_del='1',update_personal=#{operator},update_time=now() where id = #{id}
    </delete>

    <update id="deleteBookStockBrowHistoryByIds" parameterType="Long">
        update book_stock_brow_history set is_del='1',update_personal=#{operator},update_time=now() where id in
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </update>

    <sql id="historySql">
        select
            bsbh.id as id,
            bsbh.user_id as userId,
            bsbh.book_id as bookId,
            bsbh.stock_id as stockId,
            bsbh.back_time as backTime,
            bsbh.has_back as hasBack,
            bsbh.`status` as status,
            bsbh.is_del as isDel,
            bsbh.create_personal as createPersonal,
            bsbh.create_time as createTime,
            bsbh.update_personal as updatePersonal,
            bsbh.update_time as updateTime,
            su.user_name as userName,
            su.nick_name as userNickName,
            su.email as userEmail,
            su.phonenumber as userPhoneNumber,
            su.sex as userSex,
            su.avatar as userAvatar,
            lb.name as bookName,
            lb.code as bookCode
        from book_stock_brow_history as bsbh
        left join sys_user as su on su.user_id = bsbh.user_id
        left join library_book as lb on lb.id = bsbh.book_id
    </sql>

    <select id="getCount" parameterType="com.nhXJH.web.domain.BookStockBrowHistory" resultType="Integer">
        select count(id) from book_stock_brow_history
        <where>
            <if test="userId != null "> and bsbh.user_id = #{userId}</if>
            <if test="bookId != null "> and bsbh.book_id = #{bookId}</if>
            <if test="stockId != null "> and bsbh.stock_id = #{stockId}</if>
            <if test="backTime != null "> and bsbh.back_time = #{backTime}</if>
            <if test="hasBack != null  and hasBack != ''"> and bsbh.has_back = #{hasBack}</if>
            <if test="status != null  and status != ''"> and bsbh.status = #{status}</if>
            <if test="isDel != null  and isDel != ''"> and bsbh.is_del = #{isDel}</if>
            <if test="createPersonal != null "> and bsbh.create_personal = #{createPersonal}</if>
            <if test="updatePersonal != null "> and bsbh.update_personal = #{updatePersonal}</if>
            <if test="searchValue != null and searchValue!=''"> and lb.name like concat('%', #{searchValue},'%')</if>
        </where>
    </select>
    <select id="getMyHistory" parameterType="com.nhXJH.web.domain.BookStockBrowHistory" resultType="com.nhXJH.web.domain.vo.BookBrowHistoryVO">
        <include refid="historySql"/>
        <where>
            <if test="userId != null "> and bsbh.user_id = #{userId}</if>
            <if test="bookId != null "> and bsbh.book_id = #{bookId}</if>
            <if test="stockId != null "> and bsbh.stock_id = #{stockId}</if>
            <if test="backTime != null "> and bsbh.back_time = #{backTime}</if>
            <if test="hasBack != null  and hasBack != ''"> and bsbh.has_back = #{hasBack}</if>
            <if test="status != null  and status != ''"> and bsbh.status = #{status}</if>
            <if test="isDel != null  and isDel != ''"> and bsbh.is_del = #{isDel}</if>
            <if test="createPersonal != null "> and bsbh.create_personal = #{createPersonal}</if>
            <if test="updatePersonal != null "> and bsbh.update_personal = #{updatePersonal}</if>
            <if test="searchValue != null and searchValue!=''"> and lb.name like concat('%', #{searchValue},'%')</if>
        </where>
    </select>
    <select id="getMyHistoryById" parameterType="Long" resultType="com.nhXJH.web.domain.vo.BookBrowHistoryVO">
        <include refid="historySql"/>
        where bsbh.id = #{id}
    </select>

</mapper>